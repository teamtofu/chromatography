{"version":3,"sources":["utils/Stats.js","App.js","serviceWorker.js","index.js"],"names":["LinearlyInterpolate","data","x","lBound","sort","a","b","rBound","length","forEach","point","console","log","y","Math","sign","pow","Header","className","Typography","variant","component","App","fileInput","useRef","useState","fileName","setFileName","csvMatrix","setCSVMatrix","stage","setStage","region","setRegion","csv","trend","slice","map","trendSubset","filter","maximumInlet","reduce","minimumInlet","inletDelta","normalizedInlet","abs","midpoint","lIndex","rIndex","normalizedInletInverse","interpolations","5","10","15","20","25","30","70","75","80","85","90","95","transWidth","directAf","align","style","height","maxHeight","theme","VictoryTheme","material","stroke","parent","border","Card","CardContent","color","gutterBottom","toFixed","containerComponent","brushDimension","onBrushDomainChangeEnd","Button","onClick","fullWidth","disabled","type","accept","ref","onChange","current","files","name","click","file","reader","FileReader","addEventListener","event","csvData","target","result","trim","split","colRadius","Number","colHeight","colVolume","PI","interval","isNaN","lastCV","cvBaseline","i","cv","readAsText","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.86e3e986.chunk.js","sourcesContent":["import Unfloat from \"./Unfloat\";\n\nexport const CharacterizeSet = (data) => {\n  const max = data.reduce((a, b) => {\n    if (b > a) return b;\n    return a;\n  }, 0);\n\n  const mean =\n    data.reduce((a, b) => {\n      a += b;\n      return a;\n    }, 0) / data.length;\n\n  const stdevPop =\n    (data.reduce((a, b) => {\n      a += (b - mean) ** 2;\n      return a;\n    }, 0) /\n      data.length) **\n    0.5;\n\n  const lambdaApprox = mean;\n\n  return { max, mean, stdevPop, lambdaApprox };\n};\n\nexport const DeriveSet = (data) => {\n  return data.reduce((a, b, c, d) => {\n    if (c !== 0) {\n      a.push({\n        x: b.x - (b.x - d[c - 1].x) / 2,\n        y: Unfloat((b.y - d[c - 1].y) / (b.x - d[c - 1].x)),\n      });\n    }\n    return a;\n  }, []);\n};\n\nexport const CreateCDF = (data) => {\n  const total = data.reduce((a, b) => {\n    return a + b.y;\n  }, 0);\n\n  return data.reduce((a, b, c) => {\n    a.push({ x: b.x, y: b.y / total + (c === 0 ? 0 : a[c - 1].y) });\n    return a;\n  }, []);\n};\n\nexport const LinearlyInterpolate = (data, x) => {\n  data = data.sort((a, b) => a.x - b.x);\n  let y = 0;\n  let lBound = data[0];\n  let rBound = data[data.length - 1];\n\n  data.forEach((point) => {\n    if (point.x < x && point.x > lBound.x) lBound = point;\n    if (point.x > x && point.x < rBound.x) rBound = point;\n  });\n\n  console.log(lBound, rBound);\n\n  y =\n    ((lBound.y - rBound.y) / (lBound.x - rBound.x)) * (x - rBound.x) + rBound.y;\n\n  return y;\n};\n\nconst sign =\n  /* #__PURE__ */ Math.sign ||\n  function (x) {\n    if (x > 0) {\n      return 1;\n    } else if (x < 0) {\n      return -1;\n    } else {\n      return 0;\n    }\n  };\n\nconst THRESH = 0.46875;\n\nconst SQRPI = 5.6418958354775628695e-1;\n\nconst P = [\n  [\n    3.1611237438705656,\n    1.13864154151050156e2,\n    3.77485237685302021e2,\n    3.20937758913846947e3,\n    1.85777706184603153e-1,\n  ],\n  [\n    5.64188496988670089e-1,\n    8.88314979438837594,\n    6.61191906371416295e1,\n    2.98635138197400131e2,\n    8.8195222124176909e2,\n    1.71204761263407058e3,\n    2.05107837782607147e3,\n    1.23033935479799725e3,\n    2.15311535474403846e-8,\n  ],\n  [\n    3.05326634961232344e-1,\n    3.60344899949804439e-1,\n    1.25781726111229246e-1,\n    1.60837851487422766e-2,\n    6.58749161529837803e-4,\n    1.63153871373020978e-2,\n  ],\n];\n\nconst Q = [\n  [\n    2.36012909523441209e1,\n    2.44024637934444173e2,\n    1.28261652607737228e3,\n    2.84423683343917062e3,\n  ],\n  [\n    1.57449261107098347e1,\n    1.17693950891312499e2,\n    5.37181101862009858e2,\n    1.62138957456669019e3,\n    3.29079923573345963e3,\n    4.36261909014324716e3,\n    3.43936767414372164e3,\n    1.23033935480374942e3,\n  ],\n  [\n    2.56852019228982242,\n    1.87295284992346047,\n    5.27905102951428412e-1,\n    6.05183413124413191e-2,\n    2.33520497626869185e-3,\n  ],\n];\n\nconst MAX_NUM = Math.pow(2, 53);\n\nfunction erf1(y) {\n  const ysq = y * y;\n  let xnum = P[0][4] * ysq;\n  let xden = ysq;\n  let i;\n\n  for (i = 0; i < 3; i += 1) {\n    xnum = (xnum + P[0][i]) * ysq;\n    xden = (xden + Q[0][i]) * ysq;\n  }\n  return (y * (xnum + P[0][3])) / (xden + Q[0][3]);\n}\n\nfunction erfc2(y) {\n  let xnum = P[1][8] * y;\n  let xden = y;\n  let i;\n\n  for (i = 0; i < 7; i += 1) {\n    xnum = (xnum + P[1][i]) * y;\n    xden = (xden + Q[1][i]) * y;\n  }\n  const result = (xnum + P[1][7]) / (xden + Q[1][7]);\n  const ysq = parseInt(y * 16) / 16;\n  const del = (y - ysq) * (y + ysq);\n  return Math.exp(-ysq * ysq) * Math.exp(-del) * result;\n}\n\nfunction erfc3(y) {\n  let ysq = 1 / (y * y);\n  let xnum = P[2][5] * ysq;\n  let xden = ysq;\n  let i;\n\n  for (i = 0; i < 4; i += 1) {\n    xnum = (xnum + P[2][i]) * ysq;\n    xden = (xden + Q[2][i]) * ysq;\n  }\n  let result = (ysq * (xnum + P[2][4])) / (xden + Q[2][4]);\n  result = (SQRPI - result) / y;\n  ysq = parseInt(y * 16) / 16;\n  const del = (y - ysq) * (y + ysq);\n  return Math.exp(-ysq * ysq) * Math.exp(-del) * result;\n}\n\nexport const calcERF = function (x) {\n  const y = Math.abs(x);\n\n  if (y >= MAX_NUM) {\n    return sign(x);\n  }\n  if (y <= THRESH) {\n    return sign(x) * erf1(y);\n  }\n  if (y <= 4.0) {\n    return sign(x) * (1 - erfc2(y));\n  }\n  return sign(x) * (1 - erfc3(y));\n};\n\nexport const calcERFC = (x) => 1 - calcERF(x);\n\nexport const EMG = (x, h, mu, sigma, tau) => {\n  const t = (1 / 2 ** 0.5) * (sigma / tau - (x - mu) / sigma);\n  return (\n    ((h * Math.E ** (-0.5 * ((x - mu) / sigma) ** 2) * sigma) / tau) *\n    (Math.PI / 2) ** 0.5 *\n    calcERFC(t) *\n    Math.E ** (t ** 2)\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport \"./App.scss\";\nimport { Button, Card, CardContent, Typography } from \"@material-ui/core\";\nimport {\n  VictoryBrushContainer,\n  VictoryChart,\n  VictoryLine,\n  VictoryScatter,\n  VictoryTheme,\n} from \"victory\";\nimport { LinearlyInterpolate } from \"./utils/Stats\";\n\nconst Header = () => (\n  <header className=\"py-3\">\n    <Typography variant=\"h4\" component=\"h1\">\n      Conductivity Analyzer\n    </Typography>\n    <hr />\n  </header>\n);\n\nconst App = () => {\n  const fileInput = useRef();\n  const [fileName, setFileName] = useState();\n  const [csvMatrix, setCSVMatrix] = useState();\n  const [stage, setStage] = useState(1);\n  const [region, setRegion] = useState();\n\n  const fileModification = () => {\n    if (fileInput.current?.files[0]) {\n      setFileName(fileInput.current.files[0].name);\n    }\n  };\n\n  const beginProcessing = () => {\n    const file = fileInput.current?.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event) => {\n      const csvData = (event.target.result || \"\")\n        .trim()\n        .split(\"\\n\")\n        .map((a) => a.split(\",\").map((b) => b.trim()));\n\n      const colRadius = Number((csvData[0] || [])[13]) / 2;\n      const colHeight = Number((csvData[1] || [])[13]);\n\n      // Volume in liters\n      const colVolume = (Math.PI * colRadius ** 2 * colHeight) / 1000;\n\n      console.log(colRadius, colHeight, colVolume);\n\n      const interval = Number(csvData[0] && csvData[0][0]);\n\n      console.log(csvData[20][15], csvData[20]);\n\n      csvData.slice(8).forEach((a, x) => {\n        if (Number.isNaN(Number(a[15]))) console.log(x, a);\n        if (Number.isNaN(Number(a[15]) / colVolume)) console.log(x, \"v\", a);\n      });\n\n      let lastCV = 0;\n      let cvBaseline = 0;\n\n      setCSVMatrix({\n        csv: csvData,\n        trend: csvData.slice(8).map((a, x) =>\n          (a || []).slice(8, 10).map((y, i) => {\n            let cv = Number(a[15]) / colVolume;\n            if (\n              !Number.isNaN(cv) &&\n              !Number.isNaN(lastCV) &&\n              cv < lastCV * 0.85 &&\n              i === 0\n            )\n              cvBaseline += lastCV;\n            lastCV = Number.isNaN(cv) ? lastCV : cv;\n            return { x: lastCV + cvBaseline, y: Number(y) };\n          })\n        ),\n        interval,\n      });\n\n      setStage(2);\n    });\n    reader.readAsText(file);\n  };\n\n  if (stage > 1 && csvMatrix) {\n    const { csv, trend } = csvMatrix;\n    const [inletCondTag, outletCondTag] = (csv[2] || []).slice(8, 10);\n    const [inletTitle, outletTitle] = (csv[7] || []).slice(8, 10);\n\n    console.log(trend.map(([data]) => data));\n\n    if (stage === 3) {\n      let trendSubset = trend.filter(\n        ([{ x }]) => x >= region[0] && x <= region[1]\n      );\n\n      console.log(region[0], region[1], trendSubset);\n\n      let maximumInlet = trendSubset.reduce((a, b) => {\n        if (b[0].y > a) return b[0].y;\n        return a;\n      }, trendSubset[0][0].y);\n      let minimumInlet = trendSubset.reduce((a, b) => {\n        if (b[0].y < a) return b[0].y;\n        return a;\n      }, trendSubset[0][0].y);\n      let inletDelta = maximumInlet - minimumInlet;\n\n      let normalizedInlet = trendSubset.map((a) => ({\n        x: a[0].x,\n        y: Math.abs((a[0].y - minimumInlet) / inletDelta),\n      }));\n\n      const midpoint = LinearlyInterpolate(\n        normalizedInlet.map(({ x, y }) => ({ x: y, y: x })),\n        0.5\n      );\n\n      const lBound = midpoint - 0.35;\n      const rBound = midpoint + 0.35;\n\n      let lIndex = 0,\n        rIndex = 0;\n\n      trend.forEach((a, b) => {\n        if (Math.abs(a[0].x - lBound) < Math.abs(trend[lIndex][0].x - lBound))\n          lIndex = b;\n        if (Math.abs(a[0].x - rBound) < Math.abs(trend[rIndex][0].x - rBound))\n          rIndex = b;\n      });\n\n      console.log(midpoint, lIndex, rIndex);\n\n      trendSubset = trend.slice(lIndex, rIndex + 1);\n\n      maximumInlet = trendSubset.reduce((a, b) => {\n        if (b[0].y > a) return b[0].y;\n        return a;\n      }, trendSubset[0][0].y);\n      minimumInlet = trendSubset.reduce((a, b) => {\n        if (b[0].y < a) return b[0].y;\n        return a;\n      }, trendSubset[0][0].y);\n      inletDelta = maximumInlet - minimumInlet;\n\n      normalizedInlet = trendSubset.map((a) => ({\n        x: a[0].x,\n        y: Math.abs((a[0].y - minimumInlet) / inletDelta),\n      }));\n\n      const normalizedInletInverse = normalizedInlet.map(({ x, y }) => ({\n        x: y,\n        y: x,\n      }));\n\n      const interpolations = {\n        5: LinearlyInterpolate(normalizedInletInverse, 0.05),\n        10: LinearlyInterpolate(normalizedInletInverse, 0.1),\n        15: LinearlyInterpolate(normalizedInletInverse, 0.15),\n        20: LinearlyInterpolate(normalizedInletInverse, 0.2),\n        25: LinearlyInterpolate(normalizedInletInverse, 0.25),\n        30: LinearlyInterpolate(normalizedInletInverse, 0.3),\n        70: LinearlyInterpolate(normalizedInletInverse, 0.7),\n        75: LinearlyInterpolate(normalizedInletInverse, 0.75),\n        80: LinearlyInterpolate(normalizedInletInverse, 0.8),\n        85: LinearlyInterpolate(normalizedInletInverse, 0.85),\n        90: LinearlyInterpolate(normalizedInletInverse, 0.9),\n        95: LinearlyInterpolate(normalizedInletInverse, 0.95),\n      };\n\n      const transWidth = Math.abs(interpolations[95] - interpolations[5]);\n\n      const directAf =\n        [\n          [95, 5],\n          [90, 10],\n          [85, 15],\n          [80, 20],\n          [75, 25],\n          [70, 30],\n        ].reduce((a, b) => {\n          const ratio = Math.abs(\n            interpolations[b[0]] / interpolations[b[1]] || 1\n          );\n          return a + ratio;\n        }, 0) / 6;\n\n      console.log(\"interpol\", interpolations, transWidth, directAf);\n      return (\n        <div className=\"container\">\n          <Header />\n\n          <Typography align=\"center\">\n            Normalized Conductivity vs Column Volume\n          </Typography>\n\n          <div style={{ height: 480, maxHeight: \"60vh\" }}>\n            <VictoryChart theme={VictoryTheme.material}>\n              <VictoryLine\n                style={{\n                  data: { stroke: \"#c43a31\" },\n                  parent: { border: \"1px solid #ccc\" },\n                }}\n                data={normalizedInlet}\n              />\n              <VictoryScatter\n                style={{\n                  data: { stroke: \"#000\" },\n                  parent: { border: \"1px solid #ccc\" },\n                }}\n                data={[{ x: midpoint, y: 0.5 }]}\n              />\n            </VictoryChart>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-12 col-md-4\">\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Inlet Statistic\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {transWidth.toFixed(4)} CV\n                  </Typography>\n                  <Typography color=\"textSecondary\">TransWidth</Typography>\n                  <Typography variant=\"body2\" component=\"p\">\n                    Width between the 95th percentile and 5th percentile.\n                  </Typography>\n                </CardContent>\n              </Card>\n            </div>\n            <div className=\"col-12 col-md-4\">\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Inlet Statistic\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {directAf.toFixed(3)}\n                  </Typography>\n                  <Typography color=\"textSecondary\">DirectAf</Typography>\n                  <Typography variant=\"body2\" component=\"p\">\n                    Average of percentile ratios between the\n                    (100&nbsp;-&nbsp;X)th and Xth percentiles for X = 5, 10, 15,\n                    20, 25, 30\n                  </Typography>\n                </CardContent>\n              </Card>\n            </div>\n            <div className=\"col-12 col-md-4\">\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Inlet Statistic\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {(interpolations[90] / interpolations[10]).toFixed(3)}\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    DirectAf (standard)\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"p\">\n                    Percentile ratio for 90th percentile to 10th percentile\n                  </Typography>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <Header />\n\n        <Typography align=\"center\">\n          Conductivity (mS/s) vs Column Volume\n        </Typography>\n\n        <div style={{ height: 480, maxHeight: \"60vh\" }}>\n          <VictoryChart\n            theme={VictoryTheme.material}\n            containerComponent={\n              <VictoryBrushContainer\n                brushDimension=\"x\"\n                onBrushDomainChangeEnd={({ x }) => setRegion(x)}\n              />\n            }\n          >\n            <VictoryLine\n              style={{\n                data: { stroke: \"#c43a31\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              data={trend.map(([data]) => data)}\n            />\n          </VictoryChart>\n        </div>\n\n        <div className=\"mt-3\">\n          <Button\n            onClick={() => setStage(3)}\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            disabled={!region}\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <input\n        type=\"file\"\n        className=\"d-none\"\n        accept=\"text/csv\"\n        ref={fileInput}\n        onChange={fileModification}\n      />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-8\">\n          <Typography className=\"mt-1\">\n            {fileName ? `File \"${fileName}\" selected.` : \"Select a file.\"}\n          </Typography>\n        </div>\n        <div className=\"col-12 offset-md-1 col-md-3\">\n          <Button\n            onClick={() => fileInput.current?.click()}\n            variant=\"outlined\"\n            fullWidth\n          >\n            Select CSV\n          </Button>\n        </div>\n        <div className=\"col-12 mt-3\">\n          <Button\n            onClick={beginProcessing}\n            variant=\"contained\"\n            color=\"default\"\n            fullWidth\n            disabled={!fileName}\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}